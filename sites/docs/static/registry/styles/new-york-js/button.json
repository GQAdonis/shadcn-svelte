{
	"name": "button",
	"dependencies": [],
	"registryDependencies": [],
	"files": [
		{
			"name": "button.svelte",
			"content": "<script>\n\timport { type Props, buttonVariants } from \"./index.js\";\n\timport { cn } from \"$lib/utils.js\";\n\n\tlet {\n\t\tclass: className,\n\t\tvariant = \"default\",\n\t\tsize = \"default\",\n\t\tref = $bindable(null),\n\t\thref = undefined,\n\t\ttype = \"button\",\n\t\tchildren,\n\t\t...restProps\n\t}: Props = $props();\n</script>\n\n{#if href}\n\t<a bind:this={ref} class={cn(buttonVariants({ variant, size, className }))} {...restProps}>\n\t\t{@render children?.()}\n\t</a>\n{:else}\n\t<button\n\t\tbind:this={ref}\n\t\tclass={cn(buttonVariants({ variant, size, className }))}\n\t\t{type}\n\t\t{...restProps}\n\t>\n\t\t{@render children?.()}\n\t</button>\n{/if}\n"
		},
		{
			"name": "index.js",
			"content": "import { tv } from \"tailwind-variants\";\nimport Root from \"./button.svelte\";\nconst buttonVariants = tv({\n    base: \"focus-visible:ring-ring inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 disabled:pointer-events-none disabled:opacity-50\",\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground hover:bg-primary/90 shadow\",\n            destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-sm\",\n            outline: \"border-input bg-background hover:bg-accent hover:text-accent-foreground border shadow-sm\",\n            secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80 shadow-sm\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\",\n        },\n        size: {\n            default: \"h-9 px-4 py-2\",\n            sm: \"h-8 rounded-md px-3 text-xs\",\n            lg: \"h-10 rounded-md px-8\",\n            icon: \"size-9\",\n        },\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\",\n    },\n});\nexport { Root, \n//\nRoot as Button, buttonVariants, };\n"
		}
	],
	"type": "components:ui"
}